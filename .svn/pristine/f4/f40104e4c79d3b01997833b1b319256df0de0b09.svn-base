<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport"
        content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>商品分类</title>
    <link rel="stylesheet" type="text/css" href="../font/iconfont.css" />
    <link rel="stylesheet" type="text/css" href="../css/api.css" />
    <link rel="stylesheet" type="text/css" href="../css/swiper.min.css" />
    <link rel="stylesheet" type="text/css" href="../css/malls/mall.classify.css" />
</head>

<body>
    <div id="wrap" class="wrap">
        <header class="page-head" ref="header">
            <div class="back" @click="goBack" tapmode>
                <i class="iconfont icon-back"></i>
            </div>
            <div class="head-center">
                <span>商品分类</span>
            </div>
        </header>
        <!-- 商品分类 -->
        <div class="classify">
            <!-- 商品分类导航 -->
            <div class="classifyNav">
                <div 
                class="classifyItem" 
                v-for="(v,i) in goodList[0]" 
                :key="i" 
                @click="goCateChild(v.cate_id)">{{v.cate_name}}</div>
            </div>
            <!-- 商品展示 -->
            <div class="commodity">
                
               <!--  <div class="swiper-container swiper-top">
                    <div class="swiper-wrapper"> -->
                        <div class="commodity-child swiper-slide" v-for="(v,i) in goodList[1]" :key="i">
                            <div class="" v-if="v.length">
                                <div class="commodityTop" v-for="(value,index) in v" :key="index">
                                    <div class="commodity-item-head">{{value.cate_name}}</div>
                                    <div class="commodity-item-content">
                                        <div class="commodityItem" v-for="(item,number) in goodList[2][i][index]" :key="number">
                                            <div class="commodityItem-child">
                                                <div class="commodityImg">
                                                    <img :src="URL1+item.cate_images" alt="">
                                                </div>
                                                <p>{{item.cate_name}}</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="commodity-nodata" v-else>
                                <h3>暂无数据</h3>
                            </div>
                        </div>
                    <!-- </div>
                </div> -->

            </div>
        </div>
    </div>
</body>

<script type="text/javascript" src="../script/api.js"></script>
<script type="text/javascript" src="../script/lib/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="../script/lib/swiper.min.js"></script>
<script type="text/javascript" src="../script/lib/vue.min.js"></script>
<script type="text/javascript">
    var userId = window.localStorage.getItem("userId");

    var wrap = new Vue({
        el: "#wrap",
        data: {
            URL: "",
            URL1:"http://yff.wjtxmobile.com/",
            goodList: [],
            url: "",
            param: "",
        },
        computed: {

        },
        methods: {
            goBack: function goBack() {
                api.closeWin()
            },
            getAllCategory: function () {
                var that = this
                api.ajax({
                    url: 'http://yff.wjtxmobile.com/index.php?app=homepage&act=selection_type',
                    method: 'get',
                    cache: true,
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    },
                    timeout: 30,
                    dataType: 'json',
                    returnAll: false,
                    data: {
                        values: {
                            
                        }
                    }
                }, function (ret, err) {
                    //console.log(JSON.stringify(ret.retval));
                    if (ret && ret.done) {
                        /* ret.retval.forEach(function (value, index) {
                            if (value.tags.length) {
                                value.tags = value.tags.split(",")
                            }
                        }) */
                        that.goodList = ret.retval
                    } else if (ret) {
                        api.toast({
                            msg: ret.msg,
                            duration: 2000,
                            location: 'middle'
                        });
                    } else {
                        api.toast({
                            msg: err.msg,
                            duration: 2000,
                            location: 'middle'
                        });
                    }
                });
            },
            goCateChild:function goCateChild(id){
                console.log(id)
            },
            //进入商品详情
            goGoodsDet: function goGoodsDet(id, isKill, endTime) {
                //console.log(id)
                api.openWin({
                    name: 'mall.description',
                    url: './mall.description.html',
                    bounces: false,
                    animation: {
                        type: "push",
                        subType: "from_right",
                        duration: 300
                    },
                    pageParam: {
                        goodId: id,
                        seckill: isKill,
                        endTime: endTime
                    }
                });
            },
            changeBottomList: function () {

            }
                
        },
        created: function created() {
            var that = this
            this.$nextTick(function () {
                apiready = function () {
                    var header = that.$refs.header;
                    $api.fixStatusBar(header);
                    that.URL = $api.URL()
                    that.getAllCategory()
                    
                    api.setCustomRefreshHeaderInfo({
                        bgColor: '#F6F6F6',
                        images: {
                            pull: 'widget://image/refresh/pulling.png',
                            transform: [
                                'widget://image/refresh/transform0.png',
                                'widget://image/refresh/transform1.png',
                                'widget://image/refresh/transform2.png',
                                'widget://image/refresh/transform3.png',
                                'widget://image/refresh/transform4.png',
                                'widget://image/refresh/transform5.png',
                                'widget://image/refresh/transform6.png'
                            ],
                            load: [
                                'widget://image/refresh/loading0.png',
                                'widget://image/refresh/loading1.png',
                                'widget://image/refresh/loading2.png',
                                'widget://image/refresh/loading3.png',
                                'widget://image/refresh/loading4.png',
                            ]
                        }
                    }, function (ret, err) {
                        setTimeout('api.refreshHeaderLoadDone()', '500');
                    });
                }
            })
        },
        mounted: function mounted() {

        },
    })
</script>

</html>